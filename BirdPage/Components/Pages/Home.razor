@page "/"
@using BirdPage.Infrastructure
@using BirdPage.Infrastructure.Translation
@rendermode InteractiveServer

<MudPopoverProvider/>

<PageTitle>Gallery</PageTitle>

<MudOverlay Visible="@_overlayVisible" Class="fullscreen-overlay">
    <div class="image-container">
        <MudImage Src=@CurrentBird.ImgBig Fluid="true" ObjectFit="ObjectFit.Contain" Class="w-full h-full rounded-lg" @onclick="HideOverlay"/>
        <div class="image-title">
            @CurrentBird.Translate(Language.BirdNameLanguage)
        </div>
        <MudButton Variant="Variant.Filled" Color="Color.Dark" Class="centered-button" @onclick="IWantImageClicked">
            I want that image
        </MudButton>
    </div>
</MudOverlay>

<MudFab Style="position:fixed; top:50px;right:50px" Color=@Color.Info StartIcon=@_languageIcon OnClick=@SwitchLanguage/>

<MudContainer Class="mt-16 px-8">
    <MudGrid>
        <MudItem xs="12" sm="4" md="2">
            <MudText>@(new TString("FilterBy").Translate(Language.UiLanguage))</MudText>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudSelect T=BirdName Label=@BirdNameLabel MultiSelection="true" SelectAll="true" SelectAllText="Select all birds" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionBirdText))" @bind-SelectedValues="SelectedBirdNames">
                @foreach (BirdName bird in birdnames)
                {
                    <MudSelectItem T=BirdName Value="@bird">@bird.Translate(Language.BirdNameLanguage)</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudSelect T=BirdTag Label=@BirdTagLabel MultiSelection="true" SelectAll="true" SelectAllText="Select all tags" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionTagText))" @bind-SelectedValues="SelectedBirdTags">
                @foreach (BirdTag tag in birdtags)
                {
                    <MudSelectItem T=BirdTag Value="@tag">@tag.Translate(Language.UiLanguage)</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudSelect T=string Label=@LocationLabel MultiSelection="true" SelectAll="true" SelectAllText="Select all locations" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionLocationText))" @bind-SelectedValues="SelectedBirdLocations">
                @foreach (string location in birdlocations)
                {
                    <MudSelectItem T=string Value="@location">@location</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="4" sm="2" md="1">
            <MudChip T="string" Variant="Variant.Text" Color="Color.Info" OnClick=@ResetFilters>@(new TString("Reset").Translate(Language.UiLanguage))</MudChip>
        </MudItem>

        <MudFlexBreak></MudFlexBreak>

        <MudItem xs="12" sm="4" md="2">
            <MudText>@(new TString("OrderBy").Translate(Language.UiLanguage))</MudText>
        </MudItem>
        <MudItem xs="12" sm="12" md="10">
            <MudChipSet T="SortingCriteria" @bind-SelectedValue="SortingCriteria" CheckMark SelectionMode=SelectionMode.SingleSelection>
                @foreach (SortingCriteria criteria in Enum.GetValues(typeof(SortingCriteria)))
                {
                    var defaultValue = criteria == SortingCriteria.Newest;
                    <MudChip Color="Color.Info" Value=criteria Default=defaultValue OnClick=@UpdateSorting>@criteria.Translate(Language.UiLanguage)</MudChip>
                }
            </MudChipSet>
        </MudItem>

    </MudGrid>

</MudContainer>

<MudContainer Class="mt-16 px-8">
    <MudGrid>
        @foreach (var bird in UiBirds)
        {
            <MudItem xs="12" sm="12" md="6" @onclick="() => ShowOverlay(bird)">
                <BirdComponent Bird=@bird Language=@Language></BirdComponent>
            </MudItem>
        }
    </MudGrid>
</MudContainer>