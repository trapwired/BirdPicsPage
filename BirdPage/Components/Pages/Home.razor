@page "/"
@using BirdPage.Infrastructure
@using BirdPage.Infrastructure.Translation
@rendermode InteractiveServer

<MudPopoverProvider/>

<PageTitle>Gallery</PageTitle>

<MudOverlay Visible="@_overlayBigImageVisible" Class="fullscreen-overlay">
    <MudCard>
        <MudCardContent>
            <div class="image-container">
                <MudImage Src=@CurrentBird!.ImgBig Fluid="true" ObjectFit="ObjectFit.Contain" Class="w-full h-full rounded-lg" @onclick="() => HideBigPicOverlay()"/>
                <div class="image-title">
                    @CurrentBird!.Translate(Language.BirdNameLanguage)
                </div>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="centered-button" @onclick="WantImageClicked">
                    I want that image
                </MudButton>
            </div>
        </MudCardContent>
    </MudCard>
</MudOverlay>

<MudOverlay Visible="@_overlayContactVisible" Class="fullscreen-overlay">
    <div class="contact-form">
        <EditForm Model="@contactModel" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>
            <MudCard>
                <MudCardMedia Image="images/DSC03404.jpg" Height="300"/>
                <MudCardContent>
                    <MudTextField Label="Email" @bind-Value="contactModel.Email" For="@(() => contactModel.Email)" Variant="Variant.Outlined" Style="width:100%"/>
                    <MudTextField Counter="2048" @bind-Value="contactModel.Message" For="@(() => contactModel.Message)" Label="Your message" Variant="Variant.Outlined" InputType="InputType.Text" Clearable="true" Lines="5"/>
                </MudCardContent>
                <MudCardActions>
                    <MudStack Row="true">
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="demo-form-button">Contact me</MudButton>
                        <MudButton ButtonType="ButtonType.Button" Variant="Variant.Outlined" Color="Color.Primary" Class="demo-form-button" OnClick="CancelClicked">Cancel</MudButton>
                    </MudStack>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </div>
</MudOverlay>

<MudFab Style="position:fixed; top:50px;right:50px" Color=@Color.Info StartIcon=@_languageIcon OnClick=@SwitchLanguage/>
<MudFab Style="position:fixed; bottom:2%; left:50%; transform:translateX(-50%);" Color=@Color.Info StartIcon="@Icons.Material.Filled.Mail" Label="Drop me a message" OnClick="ShowContactOverlay"/>

<MudContainer Class="mt-16 px-8">
    <MudGrid>
        <MudItem xs="12" sm="4" md="2">
            <MudText>@(new TString("FilterBy").Translate(Language.UiLanguage))</MudText>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudSelect T=BirdName Label=@BirdNameLabel MultiSelection="true" SelectAll="true" SelectAllText="Select all birds" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionBirdText))" @bind-SelectedValues="SelectedBirdNames">
                @foreach (BirdName bird in birdnames)
                {
                    <MudSelectItem T=BirdName Value="@bird">@bird.Translate(Language.BirdNameLanguage)</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudSelect T=BirdTag Label=@BirdTagLabel MultiSelection="true" SelectAll="true" SelectAllText="Select all tags" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionTagText))" @bind-SelectedValues="SelectedBirdTags">
                @foreach (BirdTag tag in birdtags)
                {
                    <MudSelectItem T=BirdTag Value="@tag">@tag.Translate(Language.UiLanguage)</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="12" sm="6" md="3">
            <MudSelect T=string Label=@LocationLabel MultiSelection="true" SelectAll="true" SelectAllText="Select all locations" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionLocationText))" @bind-SelectedValues="SelectedBirdLocations">
                @foreach (string location in birdlocations)
                {
                    <MudSelectItem T=string Value="@location">@location</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <MudItem xs="4" sm="2" md="1">
            <MudChip T="string" Variant="Variant.Text" Color="Color.Info" OnClick=@ResetFilters>@(new TString("Reset").Translate(Language.UiLanguage))</MudChip>
        </MudItem>

        <MudFlexBreak></MudFlexBreak>

        <MudItem xs="12" sm="4" md="2">
            <MudText>@(new TString("OrderBy").Translate(Language.UiLanguage))</MudText>
        </MudItem>
        <MudItem xs="12" sm="12" md="10">
            <MudChipSet T="SortingCriteria" @bind-SelectedValue="SortingCriteria" CheckMark SelectionMode=SelectionMode.SingleSelection>
                @foreach (SortingCriteria criteria in Enum.GetValues(typeof(SortingCriteria)))
                {
                    var defaultValue = criteria == SortingCriteria.Newest;
                    <MudChip Color="Color.Info" Value=criteria Default=defaultValue OnClick=@UpdateSorting>@criteria.Translate(Language.UiLanguage)</MudChip>
                }
            </MudChipSet>
        </MudItem>

    </MudGrid>

</MudContainer>

<MudContainer Class="mt-16 px-8">
    <MudGrid>
        @foreach (var bird in UiBirds)
        {
            <MudItem xs="12" sm="12" md="6" @onclick="() => ShowOverlay(bird)">
                <BirdComponent Bird=@bird Language=@Language></BirdComponent>
            </MudItem>
        }
    </MudGrid>
</MudContainer>